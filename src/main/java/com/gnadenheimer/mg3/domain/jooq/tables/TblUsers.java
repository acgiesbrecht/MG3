/*
 * This file is generated by jOOQ.
*/
package com.gnadenheimer.mg3.domain.jooq.tables;


import com.gnadenheimer.mg3.domain.jooq.Keys;
import com.gnadenheimer.mg3.domain.jooq.Mg;
import com.gnadenheimer.mg3.domain.jooq.tables.records.TblUsersRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblUsers extends TableImpl<TblUsersRecord> {

    private static final long serialVersionUID = -906402816;

    /**
     * The reference instance of <code>MG.TBL_USERS</code>
     */
    public static final TblUsers TBL_USERS = new TblUsers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TblUsersRecord> getRecordType() {
        return TblUsersRecord.class;
    }

    /**
     * The column <code>MG.TBL_USERS.ID</code>.
     */
    public final TableField<TblUsersRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>MG.TBL_USERS.NOMBRE</code>.
     */
    public final TableField<TblUsersRecord, String> NOMBRE = createField("NOMBRE", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>MG.TBL_USERS.PASSWORD</code>.
     */
    public final TableField<TblUsersRecord, String> PASSWORD = createField("PASSWORD", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>MG.TBL_USERS.NOMBRECOMPLETO</code>.
     */
    public final TableField<TblUsersRecord, String> NOMBRECOMPLETO = createField("NOMBRECOMPLETO", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * Create a <code>MG.TBL_USERS</code> table reference
     */
    public TblUsers() {
        this("TBL_USERS", null);
    }

    /**
     * Create an aliased <code>MG.TBL_USERS</code> table reference
     */
    public TblUsers(String alias) {
        this(alias, TBL_USERS);
    }

    private TblUsers(String alias, Table<TblUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private TblUsers(String alias, Table<TblUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mg.MG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TblUsersRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TBL_USERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TblUsersRecord> getPrimaryKey() {
        return Keys.SQL160209153455790;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TblUsersRecord>> getKeys() {
        return Arrays.<UniqueKey<TblUsersRecord>>asList(Keys.SQL160209153455790);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblUsers as(String alias) {
        return new TblUsers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TblUsers rename(String name) {
        return new TblUsers(name, null);
    }
}
