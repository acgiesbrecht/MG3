/*
 * This file is generated by jOOQ.
*/
package com.gnadenheimer.mg3.domain.jooq.tables;


import com.gnadenheimer.mg3.domain.jooq.Keys;
import com.gnadenheimer.mg3.domain.jooq.Mg;
import com.gnadenheimer.mg3.domain.jooq.tables.records.TblAsientosRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblAsientos extends TableImpl<TblAsientosRecord> {

    private static final long serialVersionUID = 1811146757;

    /**
     * The reference instance of <code>MG.TBL_ASIENTOS</code>
     */
    public static final TblAsientos TBL_ASIENTOS = new TblAsientos();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TblAsientosRecord> getRecordType() {
        return TblAsientosRecord.class;
    }

    /**
     * The column <code>MG.TBL_ASIENTOS.ID</code>.
     */
    public final TableField<TblAsientosRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>MG.TBL_ASIENTOS.FECHAHORA</code>.
     */
    public final TableField<TblAsientosRecord, Timestamp> FECHAHORA = createField("FECHAHORA", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>MG.TBL_ASIENTOS.ID_CUENTA_CONTABLE_DEBE</code>.
     */
    public final TableField<TblAsientosRecord, Integer> ID_CUENTA_CONTABLE_DEBE = createField("ID_CUENTA_CONTABLE_DEBE", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>MG.TBL_ASIENTOS.ID_CUENTA_CONTABLE_HABER</code>.
     */
    public final TableField<TblAsientosRecord, Integer> ID_CUENTA_CONTABLE_HABER = createField("ID_CUENTA_CONTABLE_HABER", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>MG.TBL_ASIENTOS.OBSERVACION</code>.
     */
    public final TableField<TblAsientosRecord, String> OBSERVACION = createField("OBSERVACION", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>MG.TBL_ASIENTOS.MONTO</code>.
     */
    public final TableField<TblAsientosRecord, Integer> MONTO = createField("MONTO", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>MG.TBL_ASIENTOS.ID_USER</code>.
     */
    public final TableField<TblAsientosRecord, Integer> ID_USER = createField("ID_USER", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>MG.TBL_ASIENTOS.ASIENTO_MANUAL</code>.
     */
    public final TableField<TblAsientosRecord, Boolean> ASIENTO_MANUAL = createField("ASIENTO_MANUAL", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>MG.TBL_ASIENTOS.ID_CENTRO_DE_COSTO_DEBE</code>.
     */
    public final TableField<TblAsientosRecord, Integer> ID_CENTRO_DE_COSTO_DEBE = createField("ID_CENTRO_DE_COSTO_DEBE", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>MG.TBL_ASIENTOS.ID_CENTRO_DE_COSTO_HABER</code>.
     */
    public final TableField<TblAsientosRecord, Integer> ID_CENTRO_DE_COSTO_HABER = createField("ID_CENTRO_DE_COSTO_HABER", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>MG.TBL_ASIENTOS</code> table reference
     */
    public TblAsientos() {
        this("TBL_ASIENTOS", null);
    }

    /**
     * Create an aliased <code>MG.TBL_ASIENTOS</code> table reference
     */
    public TblAsientos(String alias) {
        this(alias, TBL_ASIENTOS);
    }

    private TblAsientos(String alias, Table<TblAsientosRecord> aliased) {
        this(alias, aliased, null);
    }

    private TblAsientos(String alias, Table<TblAsientosRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mg.MG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TblAsientosRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TBL_ASIENTOS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TblAsientosRecord> getPrimaryKey() {
        return Keys.SQL160414103606480;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TblAsientosRecord>> getKeys() {
        return Arrays.<UniqueKey<TblAsientosRecord>>asList(Keys.SQL160414103606480);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TblAsientosRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TblAsientosRecord, ?>>asList(Keys.SQL160414103610940, Keys.SQL160414103611100, Keys.SQL160414103611220, Keys.SQL160414103614260, Keys.SQL160906141905870, Keys.SQL160906141906450);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblAsientos as(String alias) {
        return new TblAsientos(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TblAsientos rename(String name) {
        return new TblAsientos(name, null);
    }
}
